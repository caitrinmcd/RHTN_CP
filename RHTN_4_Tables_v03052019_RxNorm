***RHTN_in_OneFlorida_Part_4_Tables_Summary_data*
************************************************************************************;
*		Program Name:  Tables_Summary_data   
*		Program Description: code to create tables and summary data
*		Author: Caitrin W. McDonough
*		Date: March 5, 2019
*
*************************************************************************************;


DATA K01_aim1.HTN;
	MERGE K01_aim1.HTN_DIANGOSIS_2 K01_aim1.HTN_CONDITION;
	BY PATID;
RUN;

**UNIQUE HTN DIAGNOSIS OR CONDITION PATIDS;
PROC SORT DATA=K01_aim1.HTN(KEEP=PATID) OUT=K01_aim1.HTN_UNIQUE NODUPKEY;
	BY PATID;
RUN;


**UNIQUE HTN PATIDS WITH BP READING;
PROC SORT DATA=K01_aim1.VITALS_BP(KEEP=PATID) OUT=K01_aim1.VITALS_BP_UNIQUE NODUPKEY;
	BY PATID;
RUN;

**MERGE WITH DIAGNOSIS OR CONDITION PEOPLE***;
DATA K01_aim1.HTN_BP_UNIQUE;
	MERGE K01_aim1.VITALS_BP_UNIQUE(IN=IN1) K01_aim1.HTN_UNIQUE(IN=IN2);
	BY PATID;
	IF IN1 AND IN2;
RUN;

**UNIQUE HTN PATIDS WITH ANTIHTN DRUG PRESCRIPTION**;
PROC SORT DATA=K01_aim1.PRESCRIBING_DRUG_RXNORM2_1(KEEP=PATID) OUT=K01_aim1.ANTIHTN_RxNorm_UNIQUE NODUPKEY;
	BY PATID;
RUN;

**MERGE WITH DIAGNOSIS OR CONDITION PEOPLE***;
DATA K01_aim1.HTN_RxNorm_UNIQUE;
	MERGE K01_aim1.ANTIHTN_RxNorm_UNIQUE(IN=IN1) K01_aim1.HTN_UNIQUE(IN=IN2);
	BY PATID;
	IF IN1 AND IN2;
RUN;

**MERGE WITH BP people***;
DATA K01_aim1.RXNORM_BP_UNIQUE;
	MERGE K01_aim1.ANTIHTN_RxNorm_UNIQUE(IN=IN1) K01_aim1.VITALS_BP_UNIQUE(IN=IN2);
	BY PATID;
	IF IN1 AND IN2;
RUN;


**MERGE ALL GROUPS***;
DATA K01_aim1.HTN_BP_RxNorm_UNIQUE;
	MERGE K01_aim1.HTN_RxNorm_UNIQUE(IN=IN1) K01_aim1.HTN_BP_UNIQUE(IN=IN2);
	BY PATID;
	IF IN1 AND IN2;
RUN;

**MAKE ADD A COLUMN TO HTN_UNIQUE OF RHTN STATUS**;
DATA K01_aim1.RHTN_Round3Status;
	SET K01_aim1.RHTN_round3list;
	RHTN='1';
RUN;

DATA K01_aim1.HTN_STATUS_round3;
	MERGE K01_Aim1.Dem_age K01_aim1.RHTN_Round3Status;
	BY PATID;
	IF RHTN='' THEN RHTN='0';
RUN;


**START HERE**;
DATA K01_aim1.HTN_STATUS_round3;
	MERGE K01_aim1.HTN_STATUS_round3 K01_Aim1.Ctrl_Round3List;
	BY PATID;
	IF CTRL_HTN='' THEN CTRL_HTN=0;
RUN;

**count checks;
PROC FREQ DATA=K01_aim1.HTN_STATUS_round3;
	TABLES  RHTN CTRL_HTN  RHTN*CTRL_HTN;
RUN;


**MAKE AGE IN DEMOGRAPHICS - already have right now**;
DATA K01_aim1.DEMOGRAPHICS_AGE;
	SET K01_aim1.DEMOGRAPHICS;
	TODAY=DATE();
	DAYS=TODAY - BIRTH_DATE;
	AGE=FLOOR(DAYS/365);
RUN;

PROC SORT DATA=K01_aim1.DEM_AGE;
	BY PATID;
RUN;

**MERGE DEMO AND HTN RHTN STATUS AND MAKE TABLES***;
DATA K01_aim1.HTN_RHTN_STATUS_Rx_DEM;
	MERGE K01_aim1.HTN_RHTN_CTL_STATUS_RxNorm (IN=A) K01_aim1.DEM_AGE (IN=B);
	BY PATID;
	IF A AND B;
RUN;

PROC SORT DATA=K01_aim1.HTN_STATUS;
	BY SEX HISPANIC;
RUN;

proc freq DATA=K01_aim1.HTN_STATUS;
tables Race;
BY SEX HISPANIC;
run;

PROC SORT DATA=K01_aim1.HTN_STATUS;
	BY RHTN CTRL_HTN SEX HISPANIC;
RUN;

proc freq DATA=K01_aim1.HTN_STATUS;
tables RACE;
by RHTN CTRL_HTN SEX HISPANIC;
run;


PROC SORT DATA=K01_aim1.HTN_STATUS;
	BY RHTN CTRL_HTN;
RUN;

proc freq DATA=K01_aim1.HTN_STATUS;
tables Hispanic Sex Race;
run;

proc freq DATA=K01_aim1.HTN_STATUS;
tables Hispanic Sex RACE;
by RHTN CTRL_HTN;
run;


quit;

proc means DATA=K01_aim1.HTN_STATUS mean std;
var age;
run;

proc means DATA=K01_aim1.HTN_STATUS mean std;
var age;
by RHTN CTRL_HTN;
run;


*MERGE MED DATA AND HTN RHTN STATUS AND MAKE TABLES***;
PROC SORT DATA=K01_aim1.HTN_STATUS;
	BY PATID;
RUN;

DATA K01_aim1.HTN_STATUS_MEDS;
	MERGE K01_aim1.HTN_STATUS (IN=A) K01_aim1.PRESCRIBING_RXNORM_ANTIHTN2 (IN=B);
	BY PATID;
	IF A AND B;
RUN;

PROC SORT DATA=K01_aim1.HTN_STATUS_MEDS;
	BY RHTN CTRL_HTN;
RUN;

PROC FREQ DATA=K01_aim1.HTN_STATUS_MEDS;
	TABLES RX_NORM_DRUG_CLASS;
RUN;

PROC FREQ DATA=K01_aim1.HTN_STATUS_MEDS;
	TABLES RX_NORM_DRUG_CLASS;
	BY RHTN CTRL_HTN;
RUN;

**TO ADD AVERAGE AND SD MEDS/PRESCRIPTIONS PER PERSON**;
PROC SORT DATA=K01_aim1.HTN_STATUS_MEDS;
	BY PATID;
RUN;

DATA K01_aim1.HTN_STATUS_MEDS_count;
	set K01_aim1.HTN_STATUS_MEDS;
	prescription_count +1;
	by PATID;
	if first.PATID then prescription_count=1;
RUN;

PROC MEANS DATA=K01_aim1.HTN_STATUS_MEDS_count mean std;
var prescription_count;
RUN;

PROC SORT DATA=K01_aim1.HTN_STATUS_MEDS_count;
	BY RHTN CTRL_HTN;
RUN;

PROC MEANS DATA=K01_aim1.HTN_STATUS_MEDS_count mean std;
var prescription_count;
	BY RHTN CTRL_HTN;
RUN;

**MAKE BP_CONTROL COLUMN IN VITALS_BP;
DATA K01_aim1.VITALS_BP_CONTROL;
	SET K01_aim1.VITALS_BP;
	IF DIASTOLIC LT 90 AND SYSTOLIC LT 140 THEN BP_CONTROL='1';
	*IF DIASTOLIC LT 90 AND SYSTOLIC = '.' THEN BP_CONTROL='1';
	*IF DIASTOLIC = '.' AND SYSTOLIC LT 140 THEN BP_CONTROL='1';
	IF DIASTOLIC GE 90 OR SYSTOLIC GE 140 THEN BP_CONTROL='0';
	*IF DIASTOLIC GE 90 OR SYSTOLIC = '.' THEN BP_CONTROL='0';
	*IF DIASTOLIC = '.' OR SYSTOLIC GE 140 THEN BP_CONTROL='0';
RUN;

*MERGE BP DATA AND HTN RHTN STATUS AND MAKE TABLES***;
DATA K01_aim1.HTN_RHTN_STATUS_BP_Rx;
	MERGE K01_aim1.HTN_RHTN_CTL_STATUS_RxNorm (IN=A) K01_aim1.VITALS_BP_CONTROL (IN=B);
	BY PATID;
	IF A AND B;
RUN;

PROC SORT DATA=K01_aim1.HTN_RHTN_STATUS_BP_Rx;
	BY RHTN CTRL_HTN;
RUN;

PROC FREQ DATA=K01_aim1.HTN_RHTN_STATUS_BP_Rx;
	TABLES BP_control;
RUN;

PROC FREQ DATA=K01_aim1.HTN_RHTN_STATUS_BP_Rx;
	TABLES BP_control;
	BY RHTN CTRL_HTN;
RUN;

proc means DATA=K01_aim1.HTN_RHTN_STATUS_BP_Rx mean std;
var ht wt diastolic systolic original_bmi;
run;

proc means DATA=K01_aim1.HTN_RHTN_STATUS_BP_Rx mean std;
var ht wt diastolic systolic original_bmi;
by RHTN CTRL_HTN;
run;

proc sort data=K01_aim.RHTN_enc_20180612;
by admit_date;
run;
